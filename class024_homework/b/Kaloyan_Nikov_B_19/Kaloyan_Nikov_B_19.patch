diff --git a/spec/models/video_spec.rb b/spec/models/video_spec.rb
index 84b087f..58cc60f 100644
--- a/spec/models/video_spec.rb
+++ b/spec/models/video_spec.rb
@@ -43,4 +43,90 @@ describe Yt::Video do
       it { expect{video.delete}.to change{video.exists?} }
     end
   end
-end
\ No newline at end of file
+
+	describe '#tags' do
+    let(:attrs) { {snippet: {"tags"=>"gaben"}} }
+
+    context 'checking for tags' do
+      it { expect(video.snippet.tags).to eq("gaben") }
+    end
+
+		context 'snippet should be nil' do
+			it { expect(@snippet).to eq(nil) }
+		end
+
+		context 'snippet should be nil' do
+			it { expect(@snippet).not_to eq("gaben") }
+		end
+  end
+
+	describe '#like' do
+		let(:attrs) { {id: 'video-id'} }
+
+		it 'should check if the video is liked' do
+			rating = double("gaben")
+			allow(video).to receive(:rating).and_return(rating)
+			allow(rating).to receive(:rating).and_return(:like)
+			expect(video.liked?).to be true
+		end
+	end
+
+	describe '#likeIt' do
+		let(:attrs) { {id: 'video-id'} }
+
+		context 'should try to clear the video' do
+			it "like needs to change video rating" do
+				rating  = double("gaben")
+				rating_new_value = :like
+				allow(video).to receive(:rating).and_return(rating)
+				allow(rating).to receive(:set).and_return(rating_new_value)
+				allow(rating).to receive(:rating).and_return(rating_new_value)
+				expect(video.like).to be true
+			end
+		end
+	end
+
+	describe '#dislikeIt' do
+		let(:attrs) { {id: 'video-id'} }
+
+		context 'should check if the video is disliked' do
+			it "dislike needs to change video rating" do
+				rating  = double("gaben")
+				rating_new_value = :dislike
+				allow(video).to receive(:rating).and_return(rating)
+				allow(rating).to receive(:set).and_return(rating_new_value)
+				allow(rating).to receive(:rating).and_return(rating_new_value)
+				expect(video.dislike).to be true
+			end
+		end
+	end
+
+	describe '#unlikeIt' do
+		let(:attrs) { {id: 'video-id'} }
+
+		context 'should check if the video is unliked' do
+			it "unlike needs to change video rating" do
+				rating  = double("gaben")
+				rating_new_value = :none
+				allow(video).to receive(:rating).and_return(rating)
+				allow(rating).to receive(:set).and_return(rating_new_value)
+				allow(rating).to receive(:rating).and_return(rating_new_value)
+				expect(video.unlike).to be true
+			end
+		end
+	end
+
+	describe '#number_of_likes' do
+    context 'checks number of likes' do
+      let(:attrs) { {statistics: {"likes"=>"9001"}} }
+      it { expect(video.statistics_set).to be_a Yt::StatisticsSet }
+    end
+  end
+
+	describe '#number_of_dislikes' do
+    context 'checks number of dislikes' do
+      let(:attrs) { {statistics: {"dislikes"=>"9001"}} }
+      it { expect(video.statistics_set).to be_a Yt::StatisticsSet }
+    end
+  end
+end
