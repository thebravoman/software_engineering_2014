diff --git a/spec/models/video_spec.rb b/spec/models/video_spec.rb
index 84b087f..044a18f 100644
--- a/spec/models/video_spec.rb
+++ b/spec/models/video_spec.rb
@@ -1,5 +1,7 @@
-require 'spec_helper'
-require 'yt/models/video'
+require_relative '../spec_helper'
+require '/home/atanaska/rspec_prog/video.rb'
+
+	
 
 describe Yt::Video do
   subject(:video) { Yt::Video.new attrs }
@@ -43,4 +45,52 @@ describe Yt::Video do
       it { expect{video.delete}.to change{video.exists?} }
     end
   end
-end
\ No newline at end of file
+
+ 
+describe '#dislike' do
+ let(:attrs) { {id: 'video-id'} }
+
+    context 'given an existing video' do
+	it ".dislike changes video ratings" do
+				rating  = double("rating")
+				rating_new_value = :dislike
+				allow(video).to receive(:rating).and_return(rating)
+				allow(rating).to receive(:set).and_return(rating_new_value)
+				allow(rating).to receive(:rating).and_return(rating_new_value)
+				expect(video.dislike).to be true
+		end
+	end
+end
+
+describe '#like' do
+ let(:attrs) { {id: 'video-id'} }
+
+    context 'given an existing video' do
+	it ".like changes video ratings" do
+				rating  = double("rating")
+				rating_new_value = :like
+				allow(video).to receive(:rating).and_return(rating)
+				allow(rating).to receive(:set).and_return(rating_new_value)
+				allow(rating).to receive(:rating).and_return(rating_new_value)
+				expect(video.like).to be true
+		end
+	end
+end
+
+describe '#unlike' do
+ let(:attrs) { {id: 'video-id'} }
+
+    context 'given an existing video' do
+	it ".unlike changes video ratings" do
+				rating  = double("rating")
+				rating_new_value = :unlike
+				allow(video).to receive(:rating).and_return(rating)
+				allow(rating).to receive(:set).and_return(rating_new_value)
+				allow(rating).to receive(:rating).and_return(rating_new_value)
+				expect(video.unlike).to be true
+		end
+	end
+end
+
+
+end
