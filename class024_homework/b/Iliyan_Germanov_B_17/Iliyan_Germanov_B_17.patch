diff --git a/spec/models/video_spec.rb b/spec/models/video_spec.rb
index 84b087f..4d48838 100644
--- a/spec/models/video_spec.rb
+++ b/spec/models/video_spec.rb
@@ -43,4 +43,68 @@ describe Yt::Video do
       it { expect{video.delete}.to change{video.exists?} }
     end
   end
-end
\ No newline at end of file
+
+	describe '#liked?' do
+		let(:attrs) { {id: 'video-id'} }
+
+		context 'given a liked video' do
+			it ".liked? returns true" do
+				rating = double("rating")
+				allow(video).to receive(:rating).and_return(rating)
+				allow(rating).to receive(:rating).and_return(:like)
+				expect(video.liked?).to be true
+			end
+		end
+
+		context 'given a not liked video' do
+			it ".liked? returns false" do
+				rating  = double("rating")
+				allow(video).to receive(:rating).and_return(rating)
+				allow(rating).to receive(:rating).and_return(:none)
+				expect(video.liked?).to be false
+			end
+		end
+	end
+
+	describe '#like' do
+		let(:attrs) { {id: 'video-id'} }
+
+		context 'given a not liked video' do
+			it ".like method calls rating.set and liked?" do
+				rating  = double("rating")
+				allow(video).to receive(:rating).and_return(rating)
+				allow(rating).to receive(:set).and_return(:like)
+				allow(video).to receive(:liked?).and_return(true)
+				expect(video.like).to be true
+			end
+		end
+	end
+
+	describe '#dislike' do
+		let(:attrs) { {id: 'video-id'} }
+
+		context 'given a liked video' do
+			it ".dislike method calls rating.set and liked?" do
+				rating  = double("rating")
+				allow(video).to receive(:rating).and_return(rating)
+				allow(rating).to receive(:set).and_return(:dislike)
+				allow(video).to receive(:liked?).and_return(false)
+				expect(video.dislike).to be true
+			end
+		end
+	end
+
+	describe '#unlike' do
+		let(:attrs) { {id: 'video-id'} }
+
+		context 'given a liked video' do
+			it ".unlike method calls rating.set and liked?" do
+				rating  = double("rating")
+				allow(video).to receive(:rating).and_return(rating)
+				allow(rating).to receive(:set).and_return(:none)
+				allow(video).to receive(:liked?).and_return(false)
+				expect(video.unlike).to be true
+			end
+		end
+	end
+end
