diff --git a/spec/models/video_spec.rb b/spec/models/video_spec.rb
index 84b087f..cf1f160 100644
--- a/spec/models/video_spec.rb
+++ b/spec/models/video_spec.rb
@@ -1,5 +1,6 @@
 require 'spec_helper'
 require 'yt/models/video'
+require 'yt/models/rating'
 
 describe Yt::Video do
   subject(:video) { Yt::Video.new attrs }
@@ -43,4 +44,71 @@ describe Yt::Video do
       it { expect{video.delete}.to change{video.exists?} }
     end
   end
-end
\ No newline at end of file
+
+	describe '#liked?' do
+		let(:attrs) { {id: 'video-id'} }
+
+		context 'given a liked video' do
+			it ".liked? returns true" do
+				rating  = double("rating")
+				allow(video).to receive(:rating).and_return(rating)
+				allow(rating).to receive(:rating).and_return(:like)
+				expect(video.liked?).to be true
+			end
+		end
+
+		context 'given a not liked video' do
+			it ".liked? returns false" do
+				rating  = double("rating")
+				allow(video).to receive(:rating).and_return(rating)
+				allow(rating).to receive(:rating).and_return(:none)
+				expect(video.liked?).to be false
+			end
+		end
+	end
+
+	describe 'likeIt' do
+		let(:attrs) { {id: 'video-id'} }
+
+		context 'clear video' do
+			it ".like changes video rating" do
+				rating  = double("rating")
+				rating_new_value = :like
+				allow(video).to receive(:rating).and_return(rating)
+				allow(rating).to receive(:set).and_return(rating_new_value)
+				allow(rating).to receive(:rating).and_return(rating_new_value)
+				expect(video.like).to be true
+			end
+		end
+	end
+
+	describe 'dislikeIt' do
+		let(:attrs) { {id: 'video-id'} }
+
+		context 'liked video' do
+			it ".dislike changes video ratings" do
+				rating  = double("rating")
+				rating_new_value = :dislike
+				allow(video).to receive(:rating).and_return(rating)
+				allow(rating).to receive(:set).and_return(rating_new_value)
+				allow(rating).to receive(:rating).and_return(rating_new_value)
+				expect(video.dislike).to be true
+			end
+		end
+	end
+
+	describe 'unlikeIt' do
+		let(:attrs) { {id: 'video-id'} }
+
+		context 'liked video' do
+			it ".unlike changes video rating" do
+				rating  = double("rating")
+				rating_new_value = :none
+				allow(video).to receive(:rating).and_return(rating)
+				allow(rating).to receive(:set).and_return(rating_new_value)
+				allow(rating).to receive(:rating).and_return(rating_new_value)
+				expect(video.unlike).to be true
+			end
+		end
+	end
+end
